package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for expand kernel
var expand_code cu.Function

// Stores the arguments for expand kernel invocation
type expand_args_t struct {
	arg_dst   unsafe.Pointer
	arg_Dx    int
	arg_Dy    int
	arg_Dz    int
	arg_src   unsafe.Pointer
	arg_Sx    int
	arg_Sy    int
	arg_Sz    int
	arg_Offx  int
	arg_Offy  int
	arg_Offz  int
	arg_value float32
	argptr    [12]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for expand kernel invocation
var expand_args expand_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	expand_args.argptr[0] = unsafe.Pointer(&expand_args.arg_dst)
	expand_args.argptr[1] = unsafe.Pointer(&expand_args.arg_Dx)
	expand_args.argptr[2] = unsafe.Pointer(&expand_args.arg_Dy)
	expand_args.argptr[3] = unsafe.Pointer(&expand_args.arg_Dz)
	expand_args.argptr[4] = unsafe.Pointer(&expand_args.arg_src)
	expand_args.argptr[5] = unsafe.Pointer(&expand_args.arg_Sx)
	expand_args.argptr[6] = unsafe.Pointer(&expand_args.arg_Sy)
	expand_args.argptr[7] = unsafe.Pointer(&expand_args.arg_Sz)
	expand_args.argptr[8] = unsafe.Pointer(&expand_args.arg_Offx)
	expand_args.argptr[9] = unsafe.Pointer(&expand_args.arg_Offy)
	expand_args.argptr[10] = unsafe.Pointer(&expand_args.arg_Offz)
	expand_args.argptr[11] = unsafe.Pointer(&expand_args.arg_value)
}

// Wrapper for expand CUDA kernel, asynchronous.
func k_expand_async(dst unsafe.Pointer, Dx int, Dy int, Dz int, src unsafe.Pointer, Sx int, Sy int, Sz int, Offx int, Offy int, Offz int, value float32, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("expand")
	}

	expand_args.Lock()
	defer expand_args.Unlock()

	if expand_code == 0 {
		expand_code = fatbinLoad(expand_map, "expand")
	}

	expand_args.arg_dst = dst
	expand_args.arg_Dx = Dx
	expand_args.arg_Dy = Dy
	expand_args.arg_Dz = Dz
	expand_args.arg_src = src
	expand_args.arg_Sx = Sx
	expand_args.arg_Sy = Sy
	expand_args.arg_Sz = Sz
	expand_args.arg_Offx = Offx
	expand_args.arg_Offy = Offy
	expand_args.arg_Offz = Offz
	expand_args.arg_value = value

	args := expand_args.argptr[:]
	cu.LaunchKernel(expand_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("expand")
	}
}

// maps compute capability on PTX code for expand kernel.
var expand_map = map[int]string{0: "",
	50: expand_ptx_50,
	52: expand_ptx_52,
	53: expand_ptx_53,
	60: expand_ptx_60,
	61: expand_ptx_61,
	62: expand_ptx_62,
	70: expand_ptx_70,
	72: expand_ptx_72,
	75: expand_ptx_75,
	80: expand_ptx_80}

// expand PTX code for various compute capabilities.
const (
	expand_ptx_50 = `
.version 8.4
.target sm_50
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_52 = `
.version 8.4
.target sm_52
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_53 = `
.version 8.4
.target sm_53
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_60 = `
.version 8.4
.target sm_60
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_61 = `
.version 8.4
.target sm_61
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_62 = `
.version 8.4
.target sm_62
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_70 = `
.version 8.4
.target sm_70
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_72 = `
.version 8.4
.target sm_72
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_75 = `
.version 8.4
.target sm_75
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
	expand_ptx_80 = `
.version 8.4
.target sm_80
.address_size 64

	// .globl	expand

.visible .entry expand(
	.param .u64 expand_param_0,
	.param .u32 expand_param_1,
	.param .u32 expand_param_2,
	.param .u32 expand_param_3,
	.param .u64 expand_param_4,
	.param .u32 expand_param_5,
	.param .u32 expand_param_6,
	.param .u32 expand_param_7,
	.param .u32 expand_param_8,
	.param .u32 expand_param_9,
	.param .u32 expand_param_10,
	.param .f32 expand_param_11
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [expand_param_0];
	ld.param.u32 	%r7, [expand_param_1];
	ld.param.u32 	%r8, [expand_param_2];
	ld.param.u32 	%r15, [expand_param_3];
	ld.param.u64 	%rd3, [expand_param_4];
	ld.param.u32 	%r9, [expand_param_5];
	ld.param.u32 	%r10, [expand_param_6];
	ld.param.u32 	%r11, [expand_param_7];
	ld.param.u32 	%r12, [expand_param_8];
	ld.param.u32 	%r13, [expand_param_9];
	ld.param.u32 	%r14, [expand_param_10];
	ld.param.f32 	%f1, [expand_param_11];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r15;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	sub.s32 	%r4, %r1, %r12;
	setp.lt.s32 	%p6, %r4, %r9;
	sub.s32 	%r5, %r2, %r13;
	or.b32  	%r25, %r5, %r4;
	setp.gt.s32 	%p7, %r25, -1;
	and.pred  	%p8, %p6, %p7;
	setp.lt.s32 	%p9, %r5, %r10;
	and.pred  	%p10, %p9, %p8;
	sub.s32 	%r6, %r3, %r14;
	setp.gt.s32 	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	setp.lt.s32 	%p13, %r6, %r11;
	and.pred  	%p14, %p13, %p12;
	mad.lo.s32 	%r26, %r3, %r8, %r2;
	mad.lo.s32 	%r27, %r26, %r7, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p14 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;

$L__BB0_3:
	mad.lo.s32 	%r28, %r6, %r10, %r5;
	mad.lo.s32 	%r29, %r28, %r9, %r4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f2, [%rd8];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB0_4;

$L__BB0_2:
	st.global.f32 	[%rd1], %f1;

$L__BB0_4:
	ret;

}

`
)
