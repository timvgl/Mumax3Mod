package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for complexConjugate kernel
var complexConjugate_code cu.Function

// Stores the arguments for complexConjugate kernel invocation
type complexConjugate_args_t struct {
	arg_output unsafe.Pointer
	arg_input  unsafe.Pointer
	arg_N      int
	argptr     [3]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for complexConjugate kernel invocation
var complexConjugate_args complexConjugate_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	complexConjugate_args.argptr[0] = unsafe.Pointer(&complexConjugate_args.arg_output)
	complexConjugate_args.argptr[1] = unsafe.Pointer(&complexConjugate_args.arg_input)
	complexConjugate_args.argptr[2] = unsafe.Pointer(&complexConjugate_args.arg_N)
}

// Wrapper for complexConjugate CUDA kernel, asynchronous.
func k_complexConjugate_async(output unsafe.Pointer, input unsafe.Pointer, N int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("complexConjugate")
	}

	complexConjugate_args.Lock()
	defer complexConjugate_args.Unlock()

	if complexConjugate_code == 0 {
		complexConjugate_code = fatbinLoad(complexConjugate_map, "complexConjugate")
	}

	complexConjugate_args.arg_output = output
	complexConjugate_args.arg_input = input
	complexConjugate_args.arg_N = N

	args := complexConjugate_args.argptr[:]
	cu.LaunchKernel(complexConjugate_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("complexConjugate")
	}
}

// maps compute capability on PTX code for complexConjugate kernel.
var complexConjugate_map = map[int]string{0: "",
	50: complexConjugate_ptx_50,
	52: complexConjugate_ptx_52,
	53: complexConjugate_ptx_53,
	60: complexConjugate_ptx_60,
	61: complexConjugate_ptx_61,
	62: complexConjugate_ptx_62,
	70: complexConjugate_ptx_70,
	72: complexConjugate_ptx_72,
	75: complexConjugate_ptx_75,
	80: complexConjugate_ptx_80}

// complexConjugate PTX code for various compute capabilities.
const (
	complexConjugate_ptx_50 = `
.version 8.5
.target sm_50
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_52 = `
.version 8.5
.target sm_52
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_53 = `
.version 8.5
.target sm_53
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_60 = `
.version 8.5
.target sm_60
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_61 = `
.version 8.5
.target sm_61
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_62 = `
.version 8.5
.target sm_62
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_70 = `
.version 8.5
.target sm_70
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_72 = `
.version 8.5
.target sm_72
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_75 = `
.version 8.5
.target sm_75
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
	complexConjugate_ptx_80 = `
.version 8.5
.target sm_80
.address_size 64

	// .globl	complexConjugate

.visible .entry complexConjugate(
	.param .u64 complexConjugate_param_0,
	.param .u64 complexConjugate_param_1,
	.param .u32 complexConjugate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [complexConjugate_param_0];
	ld.param.u64 	%rd2, [complexConjugate_param_1];
	ld.param.u32 	%r2, [complexConjugate_param_2];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	shl.b32 	%r9, %r1, 1;
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r9, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	ld.global.nc.f32 	%f2, [%rd5+4];
	neg.f32 	%f3, %f2;
	st.global.f32 	[%rd7+4], %f3;

$L__BB0_2:
	ret;

}

`
)
