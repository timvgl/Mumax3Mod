package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for hypotGovaluate3X1 kernel
var hypotGovaluate3X1_code cu.Function

// Stores the arguments for hypotGovaluate3X1 kernel invocation
type hypotGovaluate3X1_args_t struct {
	arg_output unsafe.Pointer
	arg_input  unsafe.Pointer
	arg_input2 float32
	arg_N      int
	argptr     [4]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for hypotGovaluate3X1 kernel invocation
var hypotGovaluate3X1_args hypotGovaluate3X1_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	hypotGovaluate3X1_args.argptr[0] = unsafe.Pointer(&hypotGovaluate3X1_args.arg_output)
	hypotGovaluate3X1_args.argptr[1] = unsafe.Pointer(&hypotGovaluate3X1_args.arg_input)
	hypotGovaluate3X1_args.argptr[2] = unsafe.Pointer(&hypotGovaluate3X1_args.arg_input2)
	hypotGovaluate3X1_args.argptr[3] = unsafe.Pointer(&hypotGovaluate3X1_args.arg_N)
}

// Wrapper for hypotGovaluate3X1 CUDA kernel, asynchronous.
func k_hypotGovaluate3X1_async(output unsafe.Pointer, input unsafe.Pointer, input2 float32, N int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("hypotGovaluate3X1")
	}

	hypotGovaluate3X1_args.Lock()
	defer hypotGovaluate3X1_args.Unlock()

	if hypotGovaluate3X1_code == 0 {
		hypotGovaluate3X1_code = fatbinLoad(hypotGovaluate3X1_map, "hypotGovaluate3X1")
	}

	hypotGovaluate3X1_args.arg_output = output
	hypotGovaluate3X1_args.arg_input = input
	hypotGovaluate3X1_args.arg_input2 = input2
	hypotGovaluate3X1_args.arg_N = N

	args := hypotGovaluate3X1_args.argptr[:]
	cu.LaunchKernel(hypotGovaluate3X1_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("hypotGovaluate3X1")
	}
}

// maps compute capability on PTX code for hypotGovaluate3X1 kernel.
var hypotGovaluate3X1_map = map[int]string{0: "",
	50: hypotGovaluate3X1_ptx_50,
	52: hypotGovaluate3X1_ptx_52,
	53: hypotGovaluate3X1_ptx_53,
	60: hypotGovaluate3X1_ptx_60,
	61: hypotGovaluate3X1_ptx_61,
	62: hypotGovaluate3X1_ptx_62,
	70: hypotGovaluate3X1_ptx_70,
	72: hypotGovaluate3X1_ptx_72,
	75: hypotGovaluate3X1_ptx_75,
	80: hypotGovaluate3X1_ptx_80}

// hypotGovaluate3X1 PTX code for various compute capabilities.
const (
	hypotGovaluate3X1_ptx_50 = `
.version 8.4
.target sm_50
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_52 = `
.version 8.4
.target sm_52
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_53 = `
.version 8.4
.target sm_53
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_60 = `
.version 8.4
.target sm_60
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_61 = `
.version 8.4
.target sm_61
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_62 = `
.version 8.4
.target sm_62
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_70 = `
.version 8.4
.target sm_70
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_72 = `
.version 8.4
.target sm_72
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_75 = `
.version 8.4
.target sm_75
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
	hypotGovaluate3X1_ptx_80 = `
.version 8.4
.target sm_80
.address_size 64

	// .globl	hypotGovaluate3X1

.visible .entry hypotGovaluate3X1(
	.param .u64 hypotGovaluate3X1_param_0,
	.param .u64 hypotGovaluate3X1_param_1,
	.param .f32 hypotGovaluate3X1_param_2,
	.param .u32 hypotGovaluate3X1_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [hypotGovaluate3X1_param_0];
	ld.param.u64 	%rd2, [hypotGovaluate3X1_param_1];
	ld.param.f32 	%f1, [hypotGovaluate3X1_param_2];
	ld.param.u32 	%r2, [hypotGovaluate3X1_param_3];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	abs.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	mov.b32 	%r9, %f4;
	mov.b32 	%r10, %f3;
	min.s32 	%r11, %r9, %r10;
	mov.b32 	%f5, %r11;
	max.s32 	%r12, %r9, %r10;
	mov.b32 	%f6, %r12;
	and.b32  	%r13, %r12, -33554432;
	mov.u32 	%r14, 2122317824;
	sub.s32 	%r15, %r14, %r13;
	mov.b32 	%f7, %r15;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	or.b32  	%r16, %r13, 8388608;
	mov.b32 	%f13, %r16;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32 	%p2, %f5, 0f00000000;
	selp.f32 	%f15, %f6, %f14, %p2;
	setp.eq.f32 	%p3, %f5, 0f7F800000;
	selp.f32 	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f16;

$L__BB0_2:
	ret;

}

`
)
