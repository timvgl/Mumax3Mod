package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for expGovaluate kernel
var expGovaluate_code cu.Function

// Stores the arguments for expGovaluate kernel invocation
type expGovaluate_args_t struct {
	arg_value unsafe.Pointer
	arg_N     int
	argptr    [2]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for expGovaluate kernel invocation
var expGovaluate_args expGovaluate_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	expGovaluate_args.argptr[0] = unsafe.Pointer(&expGovaluate_args.arg_value)
	expGovaluate_args.argptr[1] = unsafe.Pointer(&expGovaluate_args.arg_N)
}

// Wrapper for expGovaluate CUDA kernel, asynchronous.
func k_expGovaluate_async(value unsafe.Pointer, N int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("expGovaluate")
	}

	expGovaluate_args.Lock()
	defer expGovaluate_args.Unlock()

	if expGovaluate_code == 0 {
		expGovaluate_code = fatbinLoad(expGovaluate_map, "expGovaluate")
	}

	expGovaluate_args.arg_value = value
	expGovaluate_args.arg_N = N

	args := expGovaluate_args.argptr[:]
	cu.LaunchKernel(expGovaluate_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("expGovaluate")
	}
}

// maps compute capability on PTX code for expGovaluate kernel.
var expGovaluate_map = map[int]string{0: "",
	50: expGovaluate_ptx_50,
	52: expGovaluate_ptx_52,
	53: expGovaluate_ptx_53,
	60: expGovaluate_ptx_60,
	61: expGovaluate_ptx_61,
	62: expGovaluate_ptx_62,
	70: expGovaluate_ptx_70,
	72: expGovaluate_ptx_72,
	75: expGovaluate_ptx_75,
	80: expGovaluate_ptx_80}

// expGovaluate PTX code for various compute capabilities.
const (
	expGovaluate_ptx_50 = `
.version 8.2
.target sm_50
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_52 = `
.version 8.2
.target sm_52
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_53 = `
.version 8.2
.target sm_53
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_60 = `
.version 8.2
.target sm_60
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_61 = `
.version 8.2
.target sm_61
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_62 = `
.version 8.2
.target sm_62
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_70 = `
.version 8.2
.target sm_70
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_72 = `
.version 8.2
.target sm_72
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_75 = `
.version 8.2
.target sm_75
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
	expGovaluate_ptx_80 = `
.version 8.2
.target sm_80
.address_size 64

	// .globl	expGovaluate

.visible .entry expGovaluate(
	.param .u64 expGovaluate_param_0,
	.param .u32 expGovaluate_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expGovaluate_param_0];
	ld.param.u32 	%r2, [expGovaluate_param_1];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB0_2:
	ret;

}

`
)
